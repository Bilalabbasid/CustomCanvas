{"version":3,"file":"ui-yV0YrP4N.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.development.js","../../node_modules/react/jsx-runtime.js","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/format-error-message.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/warn-once.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","function formatErrorMessage(message, errorCode) {\n    return errorCode\n        ? `${message}. For more information and steps for solving, visit https://motion.dev/troubleshooting/${errorCode}`\n        : message;\n}\n\nexport { formatErrorMessage };\n","import { formatErrorMessage } from './format-error-message.mjs';\n\nlet warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message, errorCode) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(formatErrorMessage(message, errorCode));\n        }\n    };\n    invariant = (check, message, errorCode) => {\n        if (!check) {\n            throw new Error(formatErrorMessage(message, errorCode));\n        }\n    };\n}\n\nexport { invariant, warning };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { formatErrorMessage } from './format-error-message.mjs';\n\nconst warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, errorCode) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(formatErrorMessage(message, errorCode));\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n"],"names":["React","require$$0","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactSharedInternals","error","format","_len2","args","_key2","printWarning","level","ReactDebugCurrentFrame","stack","argsWithFormat","item","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_MODULE_REFERENCE","isValidElementType","type","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","context","provider","outerName","lazyComponent","payload","init","assign","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","disableLogs","props","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","name","source","ownerFn","x","match","reentry","componentFrameCache","PossiblyWeakMap","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","previousDispatcher","Fake","sample","sampleLines","controlLines","s","c","_frame","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","prototype","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","checkPropTypes","typeSpecs","values","location","componentName","has","typeSpecName","error$1","err","ex","isArrayImpl","isArray","a","typeName","value","hasToStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","ReactCurrentOwner","RESERVED_PROPS","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","hasValidKey","warnIfStringRefCannotBeAutoConverted","self","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","key","ref","jsxDEV","maybeKey","propName","defaultProps","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","isValidElement","object","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","validateExplicitKey","currentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","iterator","step","validatePropTypes","propTypes","_name","validateFragmentProps","fragment","keys","didWarnAboutKeySpread","jsxWithValidation","isStaticChildren","validType","sourceInfo","typeString","children","k","beforeExample","afterExample","jsxWithValidationStatic","jsxWithValidationDynamic","jsx","jsxs","reactJsxRuntime_development","jsxRuntimeModule","LayoutGroupContext","createContext","useConstant","useRef","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","removeItem","index","clamp","min","max","v","formatErrorMessage","message","errorCode","warning","invariant","check","MotionGlobalConfig","isNumericalString","isObject","isZeroValueString","memo","callback","result","noop","any","combineFunctions","b","pipe","transformers","progress","from","to","toFromDifference","SubscriptionManager","handler","numSubscriptions","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","warned","warnOnce","condition","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","easeIn","easeOut","easeInOut","isEasingArray","ease","isBezierDefinition","easingLookup","isValidEasing","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","statsBuffer","createRenderStep","runNextFrame","stepName","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","keepAlive","immediate","queue","frameData","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","flagRunNextFrame","steps","acc","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","timestamp","wake","process","cancelFrame","frameSteps","now","clearTime","time","newTime","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","number","alpha","scale","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","parsed","colorRegex","test","_a","_b","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","complex","hueToRgb","q","hslaToRgba","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","origin","target","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","frameloopDriver","passTimestamp","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","createGeneratorEasing","options","createGenerator","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","e","f","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","visualDuration","root","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","generatorOptions","inertia","keyframes","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","transitionTypeMap","replaceTransitionType","transition","WithPromise","resolve","onResolve","onReject","percentToProgress","JSAnimation","motionValue","repeatDelay","keyframes$1","generatorFactory","animationTime","totalDuration","mixKeyframes","mirroredGenerator","resolvedDuration","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","reject","newSpeed","hasChanged","driver","startTime","sampleTime","timeline","fillWildcards","radToDeg","rad","rotate","angle","rebaseAngle","matrix2dParsers","rotateZ","scaleX","scaleY","matrix3dParsers","defaultTransformValue","parseValueFromTransform","transform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","instance","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","visualElement","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","_bbox","top","left","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","currentValue","valueAsRead","isForcedComplete","isCSSVar","setStyle","supportsScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","cubicBezierAsString","d","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","isGenerator","applyGeneratorOptions","NativeAnimation","allowFlatten","keyframe","newStartTime","observe","unsupportedEasingFunctions","isUnsupportedEase","replaceStringEasing","sampleDelta","NativeAnimationExtended","sampleAnimation","isAnimatable","hasKeyframesChanged","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","supportsBrowserAnimation","transformTemplate","MAX_RESOLVE_DELAY","AsyncMotionValueAnimation","autoplay","optionsWithDefaults","KeyframeResolver$1","forced","sync","isHandoff","resolvedOptions","animation","_onReject","splitCSSVariableRegex","parseCSSVariable","token1","token2","fallback","maxDepth","getVariableValue","depth","resolved","trimmed","getValueTransition","positionalKeys","auto","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","int","transformValueTypes","numberValueTypes","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","noneIndex","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","resolveElements","elementOrSelector","scope","selectorCache","elements","getValueAsType","isHTMLElement","MAX_VELOCITY_DELTA","isFloat","MotionValue","currentTime","dependent","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","prev","endAnimation","startAnimation","microtask","cancelMicrotask","isDragging","isDragActive","setDragLock","axis","setupGesture","gestureAbortController","eventOptions","isValidHover","event","hover","onHoverStart","cancel","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parent","isPrimaryPointer","focusableElements","isElementKeyboardAccessible","isPressing","filterEvents","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","cancelEvent","isSVGElement","isSVGSVGElement","isMotionValue","valueTypes","findValueType","MotionConfigContext","PopChildMeasure","React.Component","prevProps","parentWidth","size","PopChild","isPresent","anchorX","id","useId","nonce","useContext","useInsertionEffect","width","height","right","style","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","useMemo","childId","isComplete","_","React.useEffect","usePresence","subscribe","register","safeToRemove","useCallback","getChildKey","onlyElements","filtered","Children","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","Fragment","onExit","isEveryExitComplete","isExitComplete","LazyContext","featureProps","featureDefinitions","loadFeatures","features","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","animate","useCreateMotionContext","variantLabelsAsDependency","prop","scaleCorrectors","addScaleCorrector","correctors","isForcedMotionValue","layout","layoutId","translateAlias","numTransforms","buildTransform","latestValues","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","useInitialMotionValues","visualState","useStyle","styleProp","useHTMLProps","htmlProps","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","isStatic","elementProps","createElement","getValueState","resolveVariantFromProps","resolveMotionValue","makeState","scrapeMotionValuesFromProps","createRenderState","presenceContext","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","make","newValues","useHTMLVisualState","scrapeMotionValuesFromProps$1","targetKey","useSVGVisualState","motionComponentSymbol","isRefObject","useMotionRef","externalRef","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","initialPromotionConfig","drag","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","createMotionComponent","preloadedFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","getProjectionFunctionality","ForwardRefMotionComponent","forwardRef","layoutGroupId","isStrict","strictMessage","combined","createMotionProxy","componentCache","factory","deprecatedFactoryFunction","_target","convertBoundingBoxToBox","bottom","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","scroll","createAxisDelta","createDelta","createAxis","createBox","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","visualElementStore","updateMotionValuesFromProps","next","nextValue","prevValue","existingValue","latestValue","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","renderState","willChange","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","valueFromInitial","variant","DOMVisualElement","renderHTML","projection","elementStyle","getComputedStyle","HTMLVisualElement","computedStyle","camelCaseAttributes","renderSVG","_styleProp","SVGVisualElement","defaultType","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","setTarget","isWillChangeMotionValue","addValueToWillChange","newWillChange","getOptimisedAppearId","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","valueTransition","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","appearId","calcChildStagger","numChildren","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","animateVisualElement","resolvedDefinition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","addPointerInfo","addPointerEvent","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","promoteContext","animateSingleValue","motionValue$1","compareByDepth","FlatTree","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","transformAxes","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","hasRelativeLayoutChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","_c","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","targetStyle","valuesToRender","correct","applyTo","isCSSVariable","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","handleHoverEvent","lifecycle","HoverGesture","_element","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","featureBundle","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261]}